spring:
  # 多数据源配置 可参考 https://gitee.com/baomidou/dynamic-datasource-spring-boot-starter
  datasource:
    #  ===================== ↓↓↓↓↓↓  使用druid数据源【dynamic - 公共配置】  ↓↓↓↓↓↓ =====================
    druid:
      stat-view-servlet:
        enabled: true           # 是否开启内置监控页面
        url-pattern: '/druid/*' # 访问地址
        reset-enable: true      # 是否启用重置按钮
        login-username: admin   # SQL监控后台登录用户名
        login-password: 123456  # SQL监控后台登录用户密码
      web-stat-filter:
        enabled: true                                              # 是否开启内置监控中的 Web-jdbc 关联监控的数据
        url-pattern: '/*'                                          # 匹配路径
        exclusions: '*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*'  # 排除路径
        session-stat-enable: true                                  # 是否监控session
      initialSize: 5   # 连接池初始化连接数量
      minIdle: 5       # 连接池最小空闲数
      maxActive: 20    # 连接池最大活跃连接数
      maxWait: 60000                        # 配置获取连接等待超时的时间
      timeBetweenEvictionRunsMillis: 60000  # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
      minEvictableIdleTimeMillis: 300000    # 配置一个连接在池中最小生存的时间，单位是毫秒
      validationQuery: SELECT 1 FROM DUAL   # 连接是否有效的查询语句
      testWhileIdle: true
      testOnBorrow: false
      testOnReturn: false
      # 打开PSCache，并且指定每个连接上PSCache的大小
      poolPreparedStatements: true
      maxPoolPreparedStatementPerConnectionSize: 20
      removeAbandoned: true
      # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，【 'stat':监控统计  'wall'：用于防火墙，防御sql注入   'slf4j':日志 】
      filters: stat,wall,slf4j
      # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
      connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
      #useGlobalDataSourceStat: true  # 合并多个DruidDataSource的监控数据

    type: com.alibaba.druid.pool.DruidDataSource   # 连接池类型，druid连接池springboot暂无法默认支持，需要自己配置bean
    dynamic:
      primary: master # 设置默认的数据源或者数据源组,默认值即为master
      strict: false   # 设置严格模式,默认false不启动. 启动后在未匹配到指定数据源时候会抛出异常,不启动则使用默认数据源.
      datasource:
        master:
          url: jdbc:mysql://${smallboot.mysql.master.ip}:${smallboot.mysql.master.port}/${smallboot.mysql.master.db-name}${smallboot.mysql.master.url-params}
          username: ${smallboot.mysql.master.username}
          password: ${smallboot.mysql.master.password}
          driver-class-name: com.mysql.cj.jdbc.Driver
        db-test:
          url: jdbc:mysql://${smallboot.mysql.db-test.ip}:${smallboot.mysql.db-test.port}/${smallboot.mysql.db-test.db-name}${smallboot.mysql.db-test.url-params}
          username: ${smallboot.mysql.db-test.username}
          password: ${smallboot.mysql.db-test.password}
          driver-class-name: com.mysql.cj.jdbc.Driver


# mybatis-plus相关配置
mybatis-plus:
  # xml扫描，多个目录用逗号或者分号分隔（告诉 Mapper 所对应的 XML 文件位置）
  # -- classpath: 只会扫描当前module的class
  # -- classpath*: 扫描所有jar
  mapper-locations: classpath*:**/*Mapper.xml
  # 实体扫描，多个package用逗号或者分号分隔
  typeAliasesPackage: com.zhengqing.*.entity
  # 配置扫描通用枚举, 支持统配符 * 或者 ; 分割
  type-enums-package: com.zhengqing.*.enums,com.zhengqing.*.*.enums,com.zhengqing.*.*.*.enums
  # 以下配置均有默认值,可以不设置
  global-config:
    # 关闭MP3.0+自带的banner
    banner: false
    db-config:
      # 主键类型  0:"数据库ID自增", 1:"不操作", 2:"用户输入ID",3:"数字型snowflake", 4:"全局唯一ID UUID", 5:"字符串型snowflake";
      id-type: auto
      # 字段策略
      insert-strategy: not_null
      update-strategy: not_null
      select-strategy: not_null
      # 驼峰下划线转换
      table-underline: true
      # 逻辑删除配置
      logic-delete-field: isDeleted  # 全局逻辑删除的实体字段名(since 3.3.0,这里配置后可以忽略不配置`@TableLogic`)
      logic-delete-value: 1          # 逻辑删除全局值（0表示已删除，默认为 1）
      logic-not-delete-value: 0      # 逻辑未删除全局值（1表示未删除，默认为 0）
  configuration:
    # 是否开启自动驼峰命名规则映射:从数据库列名到Java属性驼峰命名的类似映射
    map-underscore-to-camel-case: true
    cache-enabled: false
    # 如果查询结果中包含空值的列，则 MyBatis 在映射的时候，不会映射这个字段
    call-setters-on-nulls: true
    # 这个配置会将执行的sql打印出来，在开发或测试的时候可以用
    #    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
    # 解决oracle更新数据为null时无法转换报错，mysql不会出现此情况
    jdbc-type-for-null: 'null'
