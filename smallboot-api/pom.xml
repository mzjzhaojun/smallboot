<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.zhengqing</groupId>
    <artifactId>smallboot-api</artifactId>
    <version>${revision}</version>
    <packaging>pom</packaging>

    <name>smallboot-api</name>
    <url>https://gitee.com/zhengqingya</url>
    <description>Small project for Spring Boot</description>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <java.version>1.8</java.version>
        <revision>1.0.1</revision>
    </properties>

    <modules>
        <module>common</module>
        <module>system</module>
        <module>app</module>
    </modules>

    <dependencyManagement>
        <dependencies>
            <!-- https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-dependencies -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>2.7.0</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <!-- ************ ↓↓↓↓↓↓ 组件 ↓↓↓↓↓↓ ************ -->
            <dependency>
                <groupId>com.zhengqing</groupId>
                <artifactId>auth</artifactId>
                <version>${revision}</version>
            </dependency>
            <dependency>
                <groupId>com.zhengqing</groupId>
                <artifactId>base</artifactId>
                <version>${revision}</version>
            </dependency>
            <dependency>
                <groupId>com.zhengqing</groupId>
                <artifactId>core</artifactId>
                <version>${revision}</version>
            </dependency>
            <dependency>
                <groupId>com.zhengqing</groupId>
                <artifactId>db</artifactId>
                <version>${revision}</version>
            </dependency>
            <dependency>
                <groupId>com.zhengqing</groupId>
                <artifactId>file</artifactId>
                <version>${revision}</version>
            </dependency>
            <dependency>
                <groupId>com.zhengqing</groupId>
                <artifactId>log</artifactId>
                <version>${revision}</version>
            </dependency>
            <dependency>
                <groupId>com.zhengqing</groupId>
                <artifactId>redis</artifactId>
                <version>${revision}</version>
            </dependency>
            <dependency>
                <groupId>com.zhengqing</groupId>
                <artifactId>swagger</artifactId>
                <version>${revision}</version>
            </dependency>
            <dependency>
                <groupId>com.zhengqing</groupId>
                <artifactId>web</artifactId>
                <version>${revision}</version>
            </dependency>

            <!-- ************ ↓↓↓↓↓↓ 服务 ↓↓↓↓↓↓ ************ -->
            <dependency>
                <groupId>com.zhengqing</groupId>
                <artifactId>system</artifactId>
                <version>${revision}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- lombok插件 -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <optional>true</optional>
        </dependency>

        <!-- Hutool工具类 -->
        <!-- https://mvnrepository.com/artifact/cn.hutool/hutool-all -->
        <dependency>
            <groupId>cn.hutool</groupId>
            <artifactId>hutool-all</artifactId>
            <version>5.8.3</version>
        </dependency>

        <!-- guava -->
        <!-- https://mvnrepository.com/artifact/com.google.guava/guava -->
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>31.1-jre</version>
        </dependency>

        <!-- BeanUtils的依赖 -->
        <dependency>
            <groupId>commons-beanutils</groupId>
            <artifactId>commons-beanutils</artifactId>
            <version>1.9.4</version>
        </dependency>

        <!-- knife4j -->
        <!-- https://mvnrepository.com/artifact/com.github.xiaoymin/knife4j-spring-boot-starter -->
        <dependency>
            <groupId>com.github.xiaoymin</groupId>
            <artifactId>knife4j-spring-boot-starter</artifactId>
            <version>3.0.3</version>
        </dependency>


    </dependencies>

    <build>
        <finalName>${project.name}</finalName>

        <!-- 编译xml文件：解决mybatis映射关系不对应问题,maven默认不编译xml文件 -->
        <resources>
            <resource>
                <directory>src/main/java</directory>
                <includes>
                    <include>**/*.xml</include>
                </includes>
                <filtering>false</filtering>
            </resource>
            <resource>
                <directory>src/main/resources</directory>
            </resource>
        </resources>
        <testResources>
            <testResource>
                <directory>src/main/java</directory>
                <includes>
                    <include>**/*.xml</include>
                </includes>
                <filtering>false</filtering>
            </testResource>
        </testResources>

        <!-- pluginManagement：仅仅是一种声明，当前工程或其子工程中可以对 pluginManagement 下的 plugin 进行信息的选择、继承、覆盖等 -->
        <pluginManagement>
            <plugins>
                <!-- maven打包插件：将整个工程打成一个 fatjar （注：默认集成`maven-surefire-plugin`插件） -->
                <plugin>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-maven-plugin</artifactId>
                    <version>2.7.0</version>
                    <configuration>
                        <finalName>${project.build.finalName}</finalName>
                        <!-- 作用:项目打成jar，同时把本地jar包也引入进去 -->
                        <includeSystemScope>true</includeSystemScope>
                    </configuration>
                    <executions>
                        <execution>
                            <goals>
                                <!-- 可以把依赖的包都打包到生成的Jar包中 -->
                                <goal>repackage</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
            </plugins>
        </pluginManagement>

        <plugins>
            <!--添加配置跳过测试-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.22.1</version>
                <configuration>
                    <skipTests>true</skipTests>
                </configuration>
            </plugin>
            <!--添加配置跳过测试-->
        </plugins>
    </build>

    <!-- 配置maven项目的远程仓库 -->
    <repositories>
        <repository>
            <id>aliyun-repos</id>
            <name>aliyun-repos</name>
            <url>https://maven.aliyun.com/nexus/content/groups/public/</url>
            <!-- 是否开启发布版构件下载 -->
            <releases>
                <enabled>true</enabled>
            </releases>
            <!-- 是否开启快照版构件下载 -->
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
    </repositories>

    <!-- 配置maven插件的远程仓库 -->
    <pluginRepositories>
        <pluginRepository>
            <id>aliyun-plugin</id>
            <name>aliyun-plugin</name>
            <url>https://maven.aliyun.com/nexus/content/groups/public/</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </pluginRepository>
    </pluginRepositories>

</project>
